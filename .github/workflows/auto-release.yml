name: Auto Release on Version Change

on:
  push:
    branches: [main]

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check.outputs.changed }}
      new-version: ${{ steps.check.outputs.version }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Check version change
        id: check
        run: |
          # ÁèæÂú®„ÅÆ„Éê„Éº„Ç∏„Éß„É≥„ÇíÁ¢∫Ë™ç„Åô„Çã
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          
          # Ââç„ÅÆ„Ç≥„Éü„ÉÉ„Éà„ÅÆ„Éê„Éº„Ç∏„Éß„É≥„ÇíÁ¢∫Ë™ç„Åô„Çã
          git checkout HEAD~1 -- package.json
          PREVIOUS_VERSION=$(node -p "require('./package.json').version")
          git checkout HEAD -- package.json
          
          echo "Previous version: $PREVIOUS_VERSION"
          echo "Current version: $CURRENT_VERSION"
          
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "‚úÖ Version changed: $PREVIOUS_VERSION ‚Üí $CURRENT_VERSION"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "‚ÑπÔ∏è No version change detected"
          fi

  build-and-release:
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    strategy:
      matrix:
        include:
          - os: macos-latest
            platform: mac
            artifact-name: TimeClock-macOS
          - os: windows-latest
            platform: win
            artifact-name: TimeClock-Windows
          - os: ubuntu-latest
            platform: linux
            artifact-name: TimeClock-Linux
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build:${{ matrix.platform }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}-v${{ needs.check-version.outputs.new-version }}
          path: dist/
          retention-days: 30

  create-release:
    needs: [check-version, build-and-release]
    runs-on: ubuntu-latest
    if: needs.check-version.outputs.version-changed == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./release-artifacts
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.check-version.outputs.new-version }}
          name: Release v${{ needs.check-version.outputs.new-version }}
          body: |
            ## üöÄ Release v${{ needs.check-version.outputs.new-version }}
            
            ### „ÉÄ„Ç¶„É≥„É≠„Éº„Éâ
            - **macOS**: TimeClock-macOS-v${{ needs.check-version.outputs.new-version }}
            - **Windows**: TimeClock-Windows-v${{ needs.check-version.outputs.new-version }}  
            - **Linux**: TimeClock-Linux-v${{ needs.check-version.outputs.new-version }}
            
            ### Â§âÊõ¥ÂÜÖÂÆπ
            Ë©≥Á¥∞„ÅØCHANGELOG.md„Çí„ÅîÁ¢∫Ë™ç„Åè„Å†„Åï„ÅÑ„ÄÇ
          files: |
            ./release-artifacts/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
